0.95,na.rm = TRUE))
#Quantile >5th <95th
inquiries$inquiries.bin <-
cut(inquiries$total.inquiries , seq(1,15,1)) #Binning inquiries
inquiries$listing.creation.date <-
as.character(inquiries$listing.creation.date) #DPLYR
inquiries.groups <- inquiries %>%
group_by(inquiries.bin , prosper.rating...alpha.) %>%
summarise(n = n()) %>%
ungroup(inquiries.bin)
#Grouping alpha wise inquiries made
inquiries.groups <- subset(inquiries.groups ,
!is.na(inquiries.groups$prosper.rating...alpha.))
#Removing NA inquries
ggplot(data = inquiries.groups , aes(x  = inquiries.bin , y = n)) +
geom_bar(stat = 'identity' , aes(fill = prosper.rating...alpha.)) +
xlab('inquiries made (Bin wise)') + ylab('Frequency') +
ggtitle('Inquiries Frequency') + scale_fill_brewer(type = 'seq' , palette = 'Oranges')
# Chunk 47
inquiries.groups.hr <- subset(inquiries.groups ,
prosper.rating...alpha. == 'HR')
#Subsetting HR loans
inquiries$listing.creation.date <-
as.character(inquiries$listing.creation.date) #Converting to character DPLYR
inquiries.temp <-  inquiries %>%
group_by(inquiries.bin) %>%
summarise(n = n())
#Group by inquiries that I've binned
inquiries.groups.hr$n <- inquiries.groups.hr$n/inquiries.temp$n
#Get ratio!
ggplot(data = subset(inquiries.groups.hr, !is.na(inquiries.bin)) ,
aes(x = inquiries.bin , y = (n * 100))) +
geom_bar(stat = 'identity') +
ggtitle('% of inquiries made for HR rated loans') +
xlab('Inquiries(bin wise)') + ylab('% of loans which have inquiries')
rm(inquiries.groups , inquiries.groups.hr)
# Chunk 49
inquiries.defaulted <- subset(inquiries,
status  == 'Chargedoff')
#Inquiries subsetting by chargedoff
inquiries.defaulted.groups <- inquiries.defaulted %>%
group_by(inquiries.bin) %>%
summarise(n = n())  #Inquiries binned
inquiries.defaulted.groups$n <-
(inquiries.defaulted.groups$n / inquiries.temp$n)  * 100
#Percentage
ggplot(data = subset(inquiries.defaulted.groups , !is.na(inquiries.bin)) , aes(x  = inquiries.bin  , y = n)) +
geom_bar(stat = 'identity' ,aes(fill = I('darkslategrey'))) +
xlab('Inquiries made(bin wise)') +
ggtitle('Chargeoff Frequency')
# Chunk 50
rm(inquiries , inquiries.defaulted, inquiries.defaulted.groups , inquiries.temp )
# Chunk 51
inquiries <- subset(loan , total.inquiries > quantile(loan$total.inquiries ,
0.05 , na.rm = TRUE) &
total.inquiries < quantile(loan$total.inquiries,0.95,
na.rm = TRUE)) #quantile
inquiries$inquiries.bin <- cut(inquiries$total.inquiries , seq(1,15,1))
#Cutting variables based on total inquiries
ggplot(data = subset(inquiries , !is.na(inquiries.bin)) ,
aes(x = inquiries.bin , y  = borrower.rate)) +
geom_boxplot() + xlab('Inquiries made') + ylab('Borrower rate') +
ggtitle('Borrower rate by inquiries made')
#summary(inquiries$total.inquiries)
rm(inquiries)
# Chunk 53
ggplot(data = subset(loan ,!is.na(prosper.rating...alpha.)) ,
aes(x = prosper.rating...alpha. , y = estimated.loss)) + geom_boxplot() +
xlab('Prosper alpha rating') + ggtitle('Alpha rating vs estimated loss')
# Chunk 57
ggplot(data = subset(debt , !is.na(prosper.rating...alpha.) & year > 2011) ,
aes(x = prosper.rating...alpha. , y = bankcard.utilization)) +
geom_boxplot(aes(fill = income.verifiable)) +
xlab('Prosper alpha rating') +
ggtitle('Bankcard utilization by alpha scores')
#summary(debt$bankcard.utilization)
# Chunk 59
debt$listing.creation.date <- as.numeric(debt$listing.creation.date) #DPLYR
income.groups <- debt %>%
group_by(stated.monthly.income , status) %>%
summarise(n = n()) %>%
ungroup(stated.monthly.income)
#Grouping by monthly income and loan status
income.groups <- subset(income.groups ,
status == 'Chargedoff')
income.groups.total <- debt %>%
group_by(stated.monthly.income) %>%
summarise( n = n())
#Grouping by stated monthly income
denom <- function(x)
{
y = NA
y = income.groups.total[which(income.groups$stated.monthly.income == x),2]
return(y)
}
income.groups$total <- lapply(income.groups$stated.monthly.income , denom)
#For income group x , what is the average monthly income vs total
#monthly income (Using where function)
income.groups$total <- lapply(income.groups$total ,
function(x) as.numeric(x[1])) #Converting to int
rm(denom)
income.groups$n <- as.numeric(income.groups$n)
income.groups$total <- as.numeric(income.groups$total)
income.groups$ratio <- income.groups$n / income.groups$total
#Getting ratio
rm(income.groups.total)
#I'm creating bins for the new variables I just createdd ^
income.groups$income.bin <- cut(income.groups$stated.monthly.income ,
seq(0,703250,4000) , dig.lab = 10)
income.groups.plot <- income.groups %>%
group_by(income.bin) %>%
summarise( mean_ratio = mean(ratio)) %>%
ungroup(income.bin)
income.groups.plot <- income.groups.plot[-c(12),] #Remove particular column
ggplot(data = subset(income.groups.plot , !is.na(income.bin)),
aes(x = income.bin , y = (mean_ratio * 10))) +
geom_bar(stat = 'identity' , aes(fill = I('mediumpurple3'))) +
theme(axis.text.x = element_text(angle = 40, hjust = 1)) +
xlab('Income (bin wise)' ) + ylab('Mean chargeoff %') +
ggtitle('Defaulting rate vs Income groups')
rm(income.groups)
convert <- function(x) #Converting bins to corresponding integer
{
y = NA
y = which(income.groups.plot$income.bin == x)
return(as.numeric(y))
}
income.groups.plot$new_n <- lapply(income.groups.plot$income.bin,convert)
income.groups.plot <- subset(income.groups.plot , !is.na(income.bin))
income.groups.plot$new_n <- as.numeric(income.groups.plot$new_n)
#cor.test(income.groups.plot$new_n , income.groups.plot$mean_ratio)
#lmfit <- lm(mean_ratio ~ new_n , income.groups.plot)
#summary(lmfit)
rm(income.groups.plot , convert )
#summary(income.groups$stated.monthly.income)
# Chunk 60
ggplot(data = debt , aes(x = income.range )) +
geom_bar(stat = 'count'  , position = 'dodge' , aes(fill = is.borrower.homeowner)) +
scale_fill_brewer(type = 'qual' , palette = 'Dark2') +
xlab('Income range') +
ylab('Frequency') +
ggtitle('Income range frequencies') + guides(colour = guide_legend(reverse=T))
# Chunk 61
ggplot(data = debt , aes(x  = debt.to.income.ratio)) +
geom_freqpoly(aes(color = is.borrower.homeowner)) +
ggtitle('Debt to income ratio - Homeowners')
# Chunk 63
ggplot(data = subset(debt , !is.na(prosper.rating...alpha.)) ,
aes(x = debt.to.income.ratio)) +
geom_freqpoly(aes(color  = prosper.rating...alpha.)) +
ggtitle('Debt to income ratio vs Prosper alpha scores')
# Chunk 64
ggplot(data = debt , aes(x = debt.to.income.ratio)) +
geom_freqpoly(aes(color = is.borrower.homeowner))
# Chunk 65
public.record <- loan #Creating a new dataframe , for public records
public.record$public.record.bin <- cut(public.record$public.records.last12.months ,
seq(0,20,1))
#Create bins for public records
#public.record <- subset(public.record , !is.na(public.record.bin))
ggplot(data = public.record , aes(x = public.record.bin , y = borrower.rate)) +
geom_boxplot()
# Chunk 66
public.record.group <- public.record %>%
group_by(public.record.bin , prosper.rating...alpha.) %>%
summarise(n = n()) %>%
ungroup(public.record.bin)
#Grouping by public record , prosper raeting alpha
public.record.group.total <- public.record %>%
group_by(public.record.bin) %>%
summarise(n = n())
#Grouping by public record only
#Idea here is to get number of people with public record for a given prosper alpha score 'x'
value <- function(x)
{
y = NA
y = public.record.group.total[which(public.record.group.total$public.record.bin == x),]
return(y[2])
}
public.record.group$new_n <- lapply(public.record.group$public.record.bin ,
value)
#Applying func
public.record.group$new_n <- lapply(public.record.group$new_n ,
function(x) as.numeric(x[1])) #To int
public.record.group$new_n <- as.numeric(public.record.group$new_n)
public.record.group$n <- as.numeric(public.record.group$n)
public.record.group$ratio <- (public.record.group$n / public.record.group$new_n)
#Getting ratio
rm(value)
ggplot(data = subset(public.record.group,prosper.rating...alpha. == 'D') ,
aes(x = public.record.bin , y = ratio)) +
geom_bar(stat = 'identity')
row <- function(x) #get which alpha group this belongs to!
{
y = NA
y = public.record.groups[which(public.record.groups == x),]
return(y[0])
}
rm(public.record.group , public.record.group.total , row)
# Chunk 68
income.groups <- debt %>%
group_by(stated.monthly.income,monthly.loan.payment,status) %>%
summarise(n = n()) %>%
ungroup(monthly.loan.payment,stated.monthly.income)
#Grouping by monthly income , loan payment , status
income.groups$status <- ifelse(income.groups$status == 'Defauled' |
income.groups$status == 'Chargedoff' ,
'Chargedoff'  , income.groups$status)
#If a loan has defaulted/ is chargedoff , convert to chargedoff, else ,
#retain old category
income.groups <- subset(income.groups , status %in% c('Chargedoff' , 'Completed'))
#Subset only chargedoff and completed loans
#I intend to compare loans which are performing poorly(defaulted) or
#non-performing(chargedoff) with the ones that are perfoming/have performed
#very well.
ggplot(data = income.groups , aes(x = stated.monthly.income ,
y = monthly.loan.payment )) +
geom_point(aes(color = status) , alpha = I(0.35)) + geom_smooth() +
xlab('Stated monthly income') +
ylab('Monthly loan payment') +
ggtitle('Monthly payment vs Stated monthly income')
rm(income.groups)
# Chunk 69
#Grouping by monthly income,  loan payment, alpha , loan status
income.groups <- debt %>%
group_by(stated.monthly.income,monthly.loan.payment,
prosper.rating...alpha.,status) %>%
summarise(n = n()) %>%
ungroup(prosper.rating...alpha.,monthly.loan.payment,
stated.monthly.income)
income.groups$status <- ifelse(income.groups$status == 'Defauled' |
income.groups$status == 'Chargedoff' ,
'Chargedoff'  , income.groups$status)
income.groups <- subset(income.groups , status %in% c('Chargedoff' ,
'Completed') &
!is.na(prosper.rating...alpha.))
ggplot(data = income.groups , aes(x = stated.monthly.income,
y = monthly.loan.payment)) +
geom_point(aes(color = prosper.rating...alpha.) ,
alpha = I(0.35)) +
facet_wrap(~status , scales = 'free') + geom_smooth() +
xlab('Stated monthly income') +
ylab('Monthly loan Payment')
rm(income.groups)
# Chunk 70
income.groups <- debt %>%
group_by(stated.monthly.income,monthly.loan.payment,income.range,status) %>%
summarise(n = n()) %>%
ungroup(income.range,monthly.loan.payment,stated.monthly.income)
income.groups$status <- ifelse(income.groups$status == 'Defauled' |
income.groups$status == 'Chargedoff' , 'Chargedoff'  , income.groups$status)
income.groups <- subset(income.groups ,
status %in% c('Chargedoff' , 'Completed') &
!is.na(income.range))
ggplot(data = income.groups ,
aes(x = stated.monthly.income, y = monthly.loan.payment)) +
geom_point(aes(color = income.range )) +
facet_wrap(~status , scales = 'free') +
geom_smooth() + xlab('Stated monthly income') +
ylab('Monthly loan Payment') +
geom_hline(yintercept = 450)
rm(income.groups)
# Chunk 71
income.groups <- debt %>%
group_by(stated.monthly.income,monthly.loan.payment,
income.verifiable,status) %>%
summarise(n = n()) %>%
ungroup(income.verifiable,monthly.loan.payment,
stated.monthly.income)
income.groups$status <- ifelse(income.groups$status == 'Defauled' |
income.groups$status == 'Chargedoff' ,
'Chargedoff'  , income.groups$status)
income.groups <- subset(income.groups , status %in% c('Chargedoff' ,
'Completed') & !is.na(income.verifiable))
ggplot(data = income.groups , aes(x = stated.monthly.income,
y = monthly.loan.payment)) +
geom_point(aes(color = income.verifiable) , alpha = I(0.4)) +
facet_wrap(~status , scales = 'free') +
geom_smooth() + xlab('Stated monthly income') +
ylab('Monthly loan payment') +
ggtitle('Loan status by Income verifiable')
rm(income.groups)
# Chunk 72
debt$listing.creation.date <- as.character(debt$listing.creation.date)
income.groups <- debt %>%
group_by(stated.monthly.income,monthly.loan.payment,year,
rate.bin,status) %>%
summarise(n = n()) %>%
ungroup(rate.bin,year,monthly.loan.payment,
stated.monthly.income)
income.groups$status <- ifelse(income.groups$status == 'Defauled' |
income.groups$status == 'Chargedoff' ,
'Chargedoff',     income.groups$status)
income.groups <- subset(income.groups , status %in% c('Chargedoff' ,
'Completed') & !is.na(rate.bin))
ggplot(data = subset(income.groups , year > 2009 & year < 2014) ,
aes(x = stated.monthly.income, y = monthly.loan.payment)) +
geom_point(aes(color = rate.bin) , alpha = I(0.3)) +
facet_wrap(~status , scales = 'free') + geom_smooth() +
xlab('Stated monthly income') + ylab('Monthly loan payment') +
ggtitle('Loan status by Rate(bin-wise)')
rm(income.groups)
# Chunk 73
#monthly loan payment rate -->
monthly.payment <- debt %>%
group_by(stated.monthly.income , monthly.loan.payment ,
term , status ) %>%
summarise( n = n()) %>%
ungroup(term , monthly.loan.payment , stated.monthly.income)
monthly.payment$status <- ifelse(monthly.payment$status == 'Defauled' |
monthly.payment$status == 'Chargedoff' , 'Chargedoff'  , monthly.payment$status)
monthly.payment <- subset(monthly.payment ,
status %in% c('Chargedoff' , 'Completed'))
#unique(debt$term)
ggplot(data = monthly.payment , aes(x = stated.monthly.income ,
y = monthly.loan.payment)) +
geom_point(aes(color = cut(term , c(0,12,36,60))) , alpha = I(0.4)) +
facet_wrap(~status , scales = 'free')+
xlab('Stated monthly income') + ylab('Monthly loan payment') +
ggtitle('Loan status - by term!')
rm(monthly.payment)
# Chunk 74
monthly.rate <- debt %>%
group_by(monthly.loan.payment , borrower.a.p.r , status) %>%
summarise( n = n() ) %>%
ungroup(borrower.a.p.r, monthly.loan.payment)
monthly.rate$status <- ifelse(monthly.rate$status == 'Chargedoff' |
monthly.rate$status == 'Defaulted' ,
'Chargedoff' , monthly.rate$status)
monthly.rate <- subset(monthly.rate , n < quantile(monthly.rate$n ,
0.95 , na.rm = TRUE))
monthly.rate <- subset(monthly.rate , status %in% c('Chargedoff' , 'Completed'))
ggplot(data = monthly.rate , aes(x = monthly.loan.payment , y = borrower.a.p.r )) +
geom_jitter(aes(color = n ) , position = position_jitter(h = 0) , alpha = (0.4)) +
facet_wrap(~status , scales = 'free') +
scale_color_gradient(low = 'red' , high = 'white') +
geom_hline(yintercept = 10) + geom_hline(yintercept = 40) +
xlab('Monthly loan payment') + ylab('Borrower APR') +
ggtitle('Loan status - by borrower APR')
rm(monthly.rate)
# Chunk 75
monthly.rate <- debt %>%
group_by(monthly.loan.payment , borrower.a.p.r ,
debt.to.income.ratio ,  status) %>%
summarise( n = n() ) %>%
ungroup(debt.to.income.ratio ,borrower.a.p.r, monthly.loan.payment)
monthly.rate$status <- ifelse(monthly.rate$status == 'Chargedoff' |
monthly.rate$status == 'Defaulted' ,
'Chargedoff' , monthly.rate$status)
monthly.rate <- subset(monthly.rate , n < quantile(monthly.rate$n ,
0.95 , na.rm = TRUE))
monthly.rate <- subset(monthly.rate , status %in% c('Chargedoff' , 'Completed'))
ggplot(data = monthly.rate , aes(x = monthly.loan.payment ,
y = borrower.a.p.r )) +
geom_jitter(aes(color = debt.to.income.ratio , size = n ) , alpha = I(0.8)) +
facet_wrap(~status , scales = 'free') +
scale_color_gradient(low = 'black' , high = 'green') +
xlab('Monthly loan payment') + ylab('Borrower APR') +
ggtitle('Loan status - by Debt to income ratio!')
rm(monthly.rate)
# Chunk 76
loan.temp <- loan
loan.temp$listing.date <- strptime(x = as.character(loan.temp$listing.creation.date) ,
format="%Y-%m-%d %H:%M:%S")
loan.temp$listing.date <-
format(as.Date(loan.temp$listing.date,format="%Y-%m-%d"), "%Y-%m-%d")
loan.temp$funded.date <-
strptime(x = as.character(loan.temp$loan.origination.date) ,
format="%Y-%m-%d %H:%M:%S")
loan.temp$days.to.fund <-
(as.Date(loan.temp$funded.date) - as.Date(loan.temp$listing.date))
loan.temp$days.to.fund <- as.numeric(loan.temp$days.to.fund)
loan.temp <- subset(loan.temp ,
days.to.fund < quantile(loan.temp$days.to.fund , 0.97 ,
na.rm = TRUE))
ggplot(data = subset(loan.temp , year > 2009) , aes(x = days.to.fund)) +
geom_bar(stat = 'count' , aes(fill = prosper.rating...alpha.)) +
facet_wrap(~year , scales = 'free') +
xlab('Days to fund' ) + ggtitle('Day to finance a loan - by Alpha rating')
#summary(loan.temp$days.to.fund)
rm(public.record)
temp.data <- subset(loan.temp , year > 2009 & year < 2014)
temp.data$days.to.fund <- as.numeric(temp.data$days.to.fund)
#by(temp.data$days.to.fund , temp.data$prosper.rating...alpha. , median)
rm(temp.data)
# Chunk 77
ggplot(data = subset(loan.temp , year > 2009) , aes(x = days.to.fund)) +
geom_bar(stat = 'count' ,
aes(fill = cut(estimated.effective.yield ,c(0,10,20,30,40,50)))) +
facet_wrap(~year , scales = 'free') +
guides(fill=guide_legend(title="estimated.effective.yield")) +
xlab('Day to fund') + ggtitle('Days to fund a loan - by estimated effective yield')
# Chunk 78
ggplot(data = debt , aes(x = stated.monthly.income ,
y = debt.to.income.ratio)) +
geom_point(aes(color = is.borrower.homeowner)) +
xlab('Stated monthly income') +
ylab('Debt to income ratio') +
ggtitle('Homeownership status by (Debt to income ratio vs Stated monthly income)')
# Chunk 79
#borrower rate
#estimated effective yield
loan.temp <- subset(loan.temp ,
!is.na(closed.date) & closed.date !='')
loan.temp$closed.date <- strptime(x = as.character(loan.temp$closed.date) ,
format="%Y-%m-%d %H:%M:%S")
loan.temp <- subset(loan.temp ,
year > 2008)
loan.temp$closed.date <-
format(as.Date(loan.temp$closed.date,format="%Y-%m-%d"), "%Y-%m-%d")
loan.temp$closed.month <-
format(as.Date(loan.temp$closed.date,format="%Y-%m-%d"), "%m")
loan.temp$closed.date <- as.character(loan.temp$closed.date)
loan.temp$days.to.fund <- as.character(loan.temp$days.to.fund)
loan.temp$funded.date <- as.character(loan.temp$funded.date)
loan.temp$listing.creation.date <- as.character(loan.temp$listing.creation.date)
plot.final <- loan.temp %>%
group_by(prosper.rating...alpha. , year , closed.month) %>%
summarise(median = median(estimated.effective.yield)) %>%
ungroup(year,prosper.rating...alpha.)
plot.final <- subset(plot.final ,! year %in% c('2007','2008'))
ggplot(data = subset(plot.final , year < 2014) ,
aes(x = closed.month , y = median )) +
facet_wrap(~year , scales = 'free') +
geom_point(aes(color = prosper.rating...alpha.)) +
geom_line(aes(group=prosper.rating...alpha.))
rm(plot.final)
# Chunk 80
amount.rate <- debt %>%
group_by(loan.original.amount , borrower.rate , year ,
credit.score.exp) %>%
summarise(n = n()) %>%
ungroup(year , borrower.rate , loan.original.amount)
amount.rate <- subset(amount.rate , !is.na(amount.rate$credit.score.exp))
amount.rate <- subset(amount.rate ,
credit.score.exp > quantile(amount.rate$credit.score.exp ,
0.05 , na.rm = TRUE) &
credit.score.exp < quantile(amount.rate$credit.score.exp ,
0.95 , na.rm = TRUE))
amount.rate <- subset(amount.rate , year < 2014)
ggplot(data = amount.rate , aes(x = loan.original.amount , y = borrower.rate)) +
geom_jitter(aes(color = credit.score.exp) ,
position = position_jitter(h = 0)) +
facet_wrap(~year , scales = 'free_x') +
scale_color_gradient(low = 'deeppink4', high = 'darkturquoise') +
xlab('Loan original amount') + ylab('Borrower rate') +
ggtitle('Borrower rate vs Loan original amount by Average credit score')
rm(amount.rate , loan.temp )
# Chunk 81
income.groups <- debt %>%
group_by(stated.monthly.income,monthly.loan.payment,
prosper.rating...alpha.,status) %>%
summarise(n = n()) %>%
ungroup(prosper.rating...alpha.,monthly.loan.payment,
stated.monthly.income)
income.groups$status <- ifelse(income.groups$status == 'Defauled' |
income.groups$status == 'Chargedoff' ,
'Chargedoff'  , income.groups$status)
income.groups <- subset(income.groups ,
status %in% c('Chargedoff' , 'Completed') &
!is.na(prosper.rating...alpha.))
ggplot(data = income.groups , aes(x = stated.monthly.income,
y = monthly.loan.payment)) +
geom_point(aes(color = prosper.rating...alpha.) , alpha = I(0.5)) +
facet_wrap(~status , scales = 'free') + geom_smooth() +
xlab('Stated monthly income') +
ylab('Monthly loan Payment') +
ggtitle('Loan status by Prosper alpha score - by (Monthly loan payment vs Stated Monthly income') +
scale_color_brewer(type = 'seq' , palette = 'GnBu')
rm(income.groups)
# Chunk 82
monthly.rate <- debt %>%
group_by(monthly.loan.payment , borrower.a.p.r ,
debt.to.income.ratio ,  status) %>%
summarise( n = n() ) %>%
ungroup(debt.to.income.ratio ,borrower.a.p.r,
monthly.loan.payment)
monthly.rate$status <-
ifelse(monthly.rate$status == 'Chargedoff' | monthly.rate$status == 'Defaulted' ,
'Chargedoff' , monthly.rate$status)
monthly.rate <- subset(monthly.rate ,
n < quantile(monthly.rate$n , 0.95 , na.rm = TRUE))
monthly.rate <- subset(monthly.rate , status %in% c('Chargedoff' , 'Completed'))
ggplot(data = monthly.rate , aes(x = monthly.loan.payment ,
y = borrower.a.p.r )) +
geom_jitter(aes(color = debt.to.income.ratio ) , alpha = I(0.4) ) +
facet_wrap(~status , scales = 'free') +
scale_color_gradient(low = 'black' , high = 'green') +
ylab('Borrower A.P.R') + xlab('Monthly loan payment') +
ggtitle('Loan status by Debt to income ratio - by (Monthly loan Payment vs Stated monthly income)')
rm(monthly.rate)
income.groups <- debt %>%
group_by(stated.monthly.income,monthly.loan.payment,
prosper.rating...alpha.,status) %>%
summarise(n = n()) %>%
ungroup(prosper.rating...alpha.,monthly.loan.payment,
stated.monthly.income)
income.groups$status <- ifelse(income.groups$status == 'Defauled' |
income.groups$status == 'Chargedoff' ,
'Chargedoff'  , income.groups$status)
income.groups <- subset(income.groups ,
status %in% c('Chargedoff' , 'Completed') &
!is.na(prosper.rating...alpha.))
ggplot(data = income.groups , aes(x = stated.monthly.income,
y = monthly.loan.payment)) +
geom_point(aes(color = prosper.rating...alpha.) , alpha = I(0.6)) +
facet_wrap(~status , scales = 'free') + geom_smooth() +
xlab('Stated monthly income') +
ylab('Monthly loan Payment') +
ggtitle('Loan status by Prosper alpha score - by (Monthly loan payment vs Stated Monthly income') +
scale_color_brewer(type = 'seq' , palette = 'GnBu')
rm(income.groups)
