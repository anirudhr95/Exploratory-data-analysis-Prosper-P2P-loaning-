if(x == 17){
y = 'RV'
}
if(x == 18){
y = 'Taxes'
}
if(x == 19){
y = 'Vacation'
}
if(x == 20){
y = 'Wedding loans'
}
return(y)
}
#Applying over category
loan$listing.category <- lapply(loan$listing.category..numeric.,
transform_listing_category)
loan$listing.category <- factor(loan$listing.category,
c('Debt Consolidation' ,'Home Improvement' ,
'Business' , 'Personal Loan' ,
'Student Use' , 'Auto','Other' ,
'Baby & Adoption' , 'Boat',
'Cosmetic Procedure' , 'Engagement Ring',
'Green Loans' , 'Household expenses' ,
'Large purchases' ,'Medical/Dental' , 'Motorcycle','RV','Taxes','Vacation','Wedding loans' ) , ordered = T)
#Ordering the factors (Loan category factors)
ggplot(data = loan , aes(x = listing.category)) +
geom_bar(aes(fill = I('lightslateblue'))) +
scale_x_discrete(labels = abbreviate) +
xlab('Listing category') + ylab('Frequency') +
ggtitle('Loan Listing category vs Frequency')
rm(transform_listing_category)
# Chunk 12
#I convert all past due , past due 15 days , past due 45 days and past due > 60
#days to one category Past due -- Because I am only bothered if a person has
#defaulted once/ or not at all (here)
loan$status <- ifelse(startsWith(as.character(loan$loan.status),'Past') ,
'Past Due' , as.character(loan$loan.status))
ggplot(data = subset(loan ,
!is.na(prosper.rating...alpha.) &! prosper.rating...alpha.
%in% c('NC','')) ,
aes(x = status)) + geom_bar(aes(fill = prosper.rating...alpha.)) +
ylab('Frequency') + ggtitle('Distribution of loan status') +
xlab('Loan Status') + guides(fill=guide_legend(title="Alpha rating"))
pi.plot <- subset(loan , !is.na(prosper.rating...alpha.) &! prosper.rating...alpha.
%in% c('NC','')) %>%
group_by(status) %>%
summarise(n = n())
pie(pi.plot$n ,labels =  pi.plot$status , explode = 0.2)
rm(pi.plot)
# Chunk 13
prosper.activity <- loan %>%
group_by(year) %>%
summarise(n = n())
#Year wise loans. (Number of loans)
ggplot(data = prosper.activity , aes(x = year ,y = n)) + geom_line() +
scale_x_continuous(breaks = seq(2005,2016,1) ,
labels = seq(2005,2016,1)) +
geom_point() +
ggtitle('Borrowing activity for Prosper by year') + ylab('Frequency')
# Chunk 14
current.year <- subset(loan,year == 2014) #Get only current year
#Extract date to get months
current.year$listing.creation.date <- strptime(x =
as.character(current.year$listing.creation.date) ,
format="%Y-%m-%d %H:%M:%S")
#Extracting months
current.year$month <- as.character(current.year$listing.creation.date$mon+1)
current.year$listing.creation.date <-
as.character(current.year$listing.creation.date)
unique(current.year$month)
# Chunk 15
rm(current.year)
#Only get chargedoff loans
delinquency.rate <- subset(loan , status == 'Chargedoff')
#Temporary df to hold chargedoff loans only!
delinquency.rate$ListingCreationDate <-
as.character(delinquency.rate$listing.creation.date)
#DPLYR Group , therefore --> character
delinquency.by.year <- delinquency.rate %>%
group_by(year) %>%
summarise(n = n())
#Grouped by year.
#These look like magic numbers , but these are total number of loans
#(from plot 11).
#I'm using this to get delinquent/total number of loans
delinquency.by.year$total <- c(6326,11557,11263,2206,5530,11442,
19556,35413)
ggplot(data = delinquency.by.year , aes(x = year , y = n/total)) +
geom_line() +
scale_x_continuous(breaks = seq(2005,2016,1) ,
labels = seq(2005,2016,1)) +
geom_point() +
ggtitle('Chargedoff loans in Prosper by Year') +
ylab('Ratio of charged to total loan')
rm(delinquency.by.year,delinquency.rate,prosper.activity)
# Chunk 16
#Loans in 2011 only.
loan.2011 <- subset(loan , year == 2011 & !is.na(prosper.rating..numeric.))
loan.2013 <- subset(loan , year == 2013 & !is.na(prosper.rating..numeric.))
#Loans in 2013 only.
loan$listing.creation.date <- as.character(loan$listing.creation.date) #DPLYR!
#Grouping by alpha
loan.2011.groups <- loan.2011 %>%
group_by(prosper.rating...alpha.) %>%
summarise(n = n())
loan.2011.groups$ratio <- ((loan.2011.groups$n / 11442) * 100)
#SUM OF ALL LOANS IN 2011 is 11442 (I used sum() operation)
#also converted to %.
loan.2011.groups$year <- 2011
#Set year - for Rbind.
loan.2013.groups <- loan.2013 %>%
group_by(prosper.rating...alpha.) %>%
summarise(n = n())
#Grouped by year , alpha.
loan.2013.groups$ratio <- ((loan.2013.groups$n / 35413) * 100)
#Sum of all loans in loans in 2013 , again magic number!
loan.2013.groups$year <- 2013 #Set year and bind
loan.groups <- rbind(loan.2011.groups,loan.2013.groups)
# Bind the two categories and I can facet :)
ggplot(data = loan.groups , aes(x = prosper.rating...alpha. , y = ratio)) + geom_bar(stat = 'identity' ,
aes(fill = I('lightpink3'))) +
facet_wrap(~year , scales = 'free') + ylab('% of loans') + xlab('Prosper Alpha scores') +
ggtitle('Distribution of alpha scores by year')
rm(loan.2011.groups,loan.2013.groups)
# Chunk 17
#Exactly same as plot 14 , but for the fact that I'm removing 'C' rated loans
#here to show the shift of loans and trustworthiness through the years!
loan$listing.creation.date <- strptime(x = as.character(loan$listing.creation.date) ,
format="%Y-%m-%d %H:%M:%S")
ggplot(data = subset(loan.groups , prosper.rating...alpha.!='C') , aes(x = prosper.rating...alpha. , y = ratio)) +
geom_bar(stat = 'identity' ,aes(fill = I('lightpink3'))) +
facet_wrap(~year , scales = 'free') + ggtitle('Alpha rating distribution by year') +
xlab('Prosper alpha rating')
rm(loan.groups)
# Chunk 18
ggplot(data = subset(loan,year>2010 & year < 2014) ,
aes(x = prosper.rating...alpha.)) +
geom_bar(stat = 'count' , aes(fill = status)) +
facet_wrap(~year) + scale_fill_brewer(palette = 'Set1') +
xlab('Prosper alpha rating') + ylab('Frequency') +
ggtitle('Prosper distribution after alpha scores are established')
# Chunk 19
loan.2011.chargedoff <- subset(loan.2011, status == 'Chargedoff')
#Getting 2011 loans , which are chargedoff
loan.2013.chargedoff <- subset(loan.2013, status == 'Chargedoff')
#2013 loans which are chargedoff
loan.2011.chargedoff$listing.creation.date <-
as.character(loan.2011.chargedoff$listing.creation.date) #DPLYR
loan.2013.chargedoff$listing.creation.date <-
as.character(loan.2013.chargedoff$listing.creation.date) #DPLYR
loan.2011.chargedoff.groups <- loan.2011.chargedoff %>%
group_by(prosper.rating..numeric.) %>%
summarise( n = n())
loan.2013.chargedoff.groups <- loan.2013.chargedoff %>%
group_by(prosper.rating..numeric.) %>%
summarise( n = n())
#Grouped both category by alpha.
loan.2011.chargedoff.groups$year <- 2011
loan.2013.chargedoff.groups$year <- 2013
#For R-Bind.
loan.chargedoff.groups <- rbind(loan.2011.chargedoff.groups ,
loan.2013.chargedoff.groups)
rm(loan.2013.chargedoff.groups,loan.2011.chargedoff.groups)
ggplot(data = loan.chargedoff.groups ,
aes(x = prosper.rating..numeric. , y = n)) +
geom_bar(stat = 'identity' , aes(fill = I('indianred3'))) +
facet_wrap(~year , scales = 'free_x') +
ggtitle('Ratio of loans defaulting - by year 2011 vs 2013') +
xlab('Prosper numeric rating (1 - HR , 7 - AA)') +
ylab('Frequency')  +
scale_x_continuous(breaks = seq(0,7,1) , labels = seq(0,7,1))
# Chunk 20
loan.hr.2011.check <- subset(loan.2011 , prosper.rating...alpha. == 'HR')
loan.hr.2013.check <- subset(loan.2013 , prosper.rating...alpha. == 'HR')
#HR rated loans in year 2011 an 2013 respectively
returns <- loan.hr.2011.check$estimated.return
loan.hr.2011 <- data.frame(returns)
loan.hr.2011$year <- 2011
#Returns for 2011
returns <- loan.hr.2013.check$estimated.return
loan.hr.2013 <- data.frame(returns)
loan.hr.2013$year <- 2013
#Returns for 2013.
loan.hr <- rbind(loan.hr.2013,loan.hr.2011) #Combine two!
rm(loan.hr.2011, loan.hr.2013,returns)
ggplot(data = loan.hr , aes(x = as.character(year) , y = returns)) +
geom_boxplot() +xlab('year') +
ggtitle('Return for HR rated loan in 2011 vs 2013')
rm(loan.2011.chargedoff,loan.2013.chargedoff,loan.hr,
loan.hr.2011.check,loan.hr.2013.check,
loan.chargedoff.groups, loan.2011 , loan.2013)
# Chunk 21
#Debt to income ratio subsetting quantiles!
debt <- subset(loan , debt.to.income.ratio > quantile(loan$debt.to.income.ratio ,
0.01 , na.rm = TRUE) &
debt.to.income.ratio < quantile(loan$debt.to.income.ratio , 0.95 ,
na.rm = TRUE))
#summary(debt$debtToIncomeRatio).
#Creating variables by bin!
debt$debt.bin <- cut(debt$debt.to.income.ratio , c(0,0.1,0.2,0.3,0.4,0.5))
ggplot(data = debt , aes(x = debt.bin)) + geom_bar(aes(fill = status)) +
ggtitle('Debt to income ratio (bin wise)') + xlab('Debt to income ratio') +
ylab('Frequency') + scale_fill_brewer(palette = 'Set3')
#I used seq , and the best suit was PuRd paletter , but the difference in
#categories was not this evident , so I decided to keep this!
#summary(debt$debt.to.income.ratio)
# Chunk 22
ggplot(data = subset(loan,employment.status!='') ,
aes(x = income.range)) + geom_bar(aes(fill = employment.status)) +
xlab('Income range') + ylab('Frequency') + ggtitle('Income distribution') +
scale_fill_brewer(palette = 'Set2')
#unique(loan$income.range)
# Chunk 23
loan$listing.creation.date <- as.character(loan$listing.creation.date)
states_present <- subset(loan,borrower.state !='') #Removing null entries
all_states <- map_data('state') #Only use is for map polygon
data(state) #Loading state dataset
final_frame <- states_present %>%
group_by(borrower.state) %>%
summarise(n = n()) #Grouping by borrower state
colnames(final_frame)[which(names(final_frame) == "borrower.state")] <-
"state.abb" #Renaming column
states <- data.frame(state.abb, state.name, state.area, state.center,
state.division, state.region, state.x77)
#Creating a new dataframe from all the previous lists to draw the map
final_frame <- merge(final_frame,states,by = 'state.abb')
p <- ggplot()
p <- p + geom_polygon( data=all_states, aes(x=long, y=lat, group = group),
colour="white", fill="grey10" )
#Everything looks good.
p + geom_point(data = final_frame,  aes(x = x , y = y , size = (n* 1.5)) ,
color = 'coral3') +
geom_text(data = states, aes(x     = x,
y     = y,
label = state.abb,
group = NULL),
size = 3,
colour="white") + coord_map() +
ggtitle("Geographic distribution of Borrowers")
#rm(P1)
#rm(stateFromLower)
rm(all_states)
rm(states_present)
rm(final_frame , state.x77 , states , p ,state.abb , state.area ,
state.center , state.division , state.name , state.region)
# Chunk 24
ggplot(data = subset(normalized.data,
!is.na(credit.bins) & !is.na(prosper.rating..numeric.)) ,
aes(x = credit.bins)) +
geom_bar(aes(fill = prosper.rating...alpha.)) +
guides(fill = guide_legend(reverse = TRUE)) +
ggtitle('Plot of credit scores (bin wise)') +
ylab('Frequency') + xlab('Average credit score') +
guides(fill=guide_legend(title="Alpha rating"))
# Chunk 25
#Convert to Character from POSIXLT , because DPLYR!!!!!
loan$listing.creation.date <- as.character(loan$listing.creation.date)
#Grouping by year and listing category for ggplot
listing.groups <- loan %>%
group_by(year,listing.category) %>%
summarise(n = n()) %>%
ungroup(year)
ggplot(data = listing.groups , aes(x = year ,y = n)) +
geom_bar(aes(fill = listing.category),stat = 'identity') +
scale_x_continuous(breaks = seq(2005,2014,1) , labels = seq(2005,2014,1)) +
ylab('Frequency') +
ggtitle('Number of loans vs Year') +
scale_y_continuous(breaks = seq(0,38000,2000) ,
labels = seq(0,38000,2000))
rm(listing.groups)
# Chunk 26
#Getting rating wise groups
rating.wise.status <- subset(loan , !is.na(prosper.rating...alpha.)) %>%
group_by(prosper.rating...alpha. , status) %>%
summarise(n = n()) %>%
ungroup(status)
ggplot(data = rating.wise.status , aes(x = prosper.rating...alpha. , y = n)) +
geom_bar(aes(fill = status) , stat = 'identity') +
xlab('Prosper alpha rating') +
ylab('Frequency') +
scale_y_continuous(breaks = seq(0,20000,4000) ,
labels = seq(0,20000,4000))  +
ggtitle('Distribution of Prosper alpha rating') +
scale_fill_brewer(palette = 'Set2')
rm(rating.wise.status)
# Chunk 27
#Exactly same as plot 18 , but using Employment category!
loan.2013 <- subset(loan , year == 2013)
loan.2011 <- subset(loan , year == 2011)
loan.2011 <- subset(loan.2011 , status == 'Chargedoff')
loan.2013 <- subset(loan.2013 , status == 'Chargedoff')
employment.final <- rbind(loan.2011 , loan.2013)
rm(loan.2011 , loan.2013)
employment.final <- subset(employment.final ,
employment.status != 'Not available')
ggplot(data = employment.final , aes(x = employment.status)) +
geom_bar(stat = 'count' , aes(fill = income.range)) +
facet_wrap(~year) + scale_x_discrete(labels = abbreviate) +
xlab('Employment Status') +
ylab('Frequency') +
ggtitle('Employment Status Frequency in 2011 , 2013')
#by(employment.final$employment.status , employment.final$year , summary)
#This and verifiable income
rm(employment.final)
# Chunk 28
ggplot(data = subset(loan,!is.na(rate.bin) & !is.na(prosper.rating...alpha.)) ,
aes(x = rate.bin)) + geom_bar(aes(fill = I('cyan3'))) +
facet_wrap(~prosper.rating...alpha. , scales = 'free')  +
ylab('Frequency')  + xlab('Borrower APR Split') +
ggtitle('Rates by Prosper rating')
# Chunk 29
ggplot(data = loan , aes(x = prosper.rating...alpha.)) +
geom_bar(aes(fill = is.borrower.homeowner) , position = 'dodge') +
xlab('Prosper alpha rating') + ylab('Frequency') +
ggtitle('Plot of homeowners by Alpha score')
# Chunk 30
loan$listing.creation.date <- as.character(loan$listing.creation.date) #Dplyr
homeowner.groups <- subset(loan,!is.na(is.borrower.homeowner)) %>%
group_by(prosper.rating...alpha.,is.borrower.homeowner) %>%
summarise(n = n()) %>%
ungroup(prosper.rating...alpha.)
#Group by rating and homeownership
homeowner.groups.false <- subset(homeowner.groups ,
is.borrower.homeowner == 'False')
homeowner.groups.true  <- subset(homeowner.groups ,
is.borrower.homeowner == 'True')
homeowner.groups.final <-
homeowner.groups.true$n / (homeowner.groups.true$n + homeowner.groups.false$n)
homeowner.prosper.rating...alpha.  = homeowner.groups.true$prosper.rating...alpha.
#Getting ratio!
rm(homeowner.groups , homeowner.groups.false, homeowner.groups.true)
homeowner.final <- data.frame(homeowner.groups.final,
homeowner.prosper.rating...alpha.)
#Creating new dataframe from previous lists.
rm(homeowner.groups.final,homeowner.prosper.rating...alpha.)
ggplot(dat = subset(homeowner.final,!is.na(homeowner.prosper.rating...alpha.)) ,
aes(x = homeowner.prosper.rating...alpha. , y = homeowner.groups.final)) +
geom_bar(stat = 'identity', aes(fill = I('lightslategrey'))) +
xlab('Alpha rating') + ylab('% of homeowners') +
ggtitle('Homeowners by Alpha scores')
rm(homeowner.final)
# Chunk 31
income.ver.groups <- loan %>%
group_by(prosper.rating...alpha.,income.verifiable) %>%
summarise(n = n()) %>%
ungroup(prosper.rating...alpha.)
#grouping by income verifiable
income.ver.groups <- subset(income.ver.groups , !is.na(prosper.rating...alpha.))
ggplot(data = income.ver.groups , aes(x = prosper.rating...alpha. , y = n)) +
geom_bar(stat = 'identity' , aes(fill = income.verifiable)) +
scale_fill_brewer(palette = 'Set1') +
ggtitle('Income group by Alpha score') +
xlab('Alpha ratings') + ylab('Frequency')
# Chunk 32
#Grouping by alpha scores!
alpha.groups <- loan %>%
group_by(prosper.rating...alpha.) %>%
summarise(n = n())
#returns the number of loans with income verified for a alpha 'x'
divide <- function(x)
{
y = NA
#Extracting values from row using indexing
if(x == 'AA')
y = alpha.groups[1,2]
if(x == 'A')
y = alpha.groups[2,2]
if(x == 'B')
y = alpha.groups[3,2]
if(x == 'C')
y = alpha.groups[4,2]
if(x == 'D')
y = alpha.groups[5,2]
if(x == 'E')
y = alpha.groups[6,2]
if(x == 'HR')
y = alpha.groups[7,2]
#index 2 contains the total numbers of loans by income verified category for alpha rating 'x'
return(y)
}
alpha.groups <- subset(alpha.groups , !is.na(prosper.rating...alpha.))
income.ver.groups$new_n <- lapply(income.ver.groups$prosper.rating...alpha.,
divide)
#Applying function and storing total number into new_n
income.ver.groups$new_n <- lapply(income.ver.groups$new_n ,
function(x) as.numeric(x[1]))
#Converting this is to integer format
rm(alpha.groups,divide)
income.ver.groups$n <- as.numeric(income.ver.groups$n)
income.ver.groups$new_n <- as.numeric(income.ver.groups$new_n)
income.ver.groups$n <- (income.ver.groups$n / income.ver.groups$new_n)
#Verified income ratio by dividing
ggplot(data = subset(income.ver.groups , income.verifiable == 'False') ,
aes(x = prosper.rating...alpha. , y = n)) +
geom_bar(stat = 'identity' , aes(fill = I('deeppink4'))) +
xlab('Alpha rating') + ylab('% of income unverified') +
ggtitle('% of loans with unverified incomes')
rm(income.ver.groups)
# Chunk 33
loan.2013 <- subset(loan , year == 2013) #Subset of loans , in year 2013 only!
ggplot(data = loan.2013 , aes(x = prosper.rating...alpha. ,
y = estimated.effective.yield)) +
geom_boxplot() +
xlab('Prosper Alpha scores') +
ggtitle('Effective yeild vs Prosper alpha scores')
#by(loan.2013$estimated.loss , loan.2013$prosper.rating...alpha. , summary)
# Chunk 35
rm(loan.2013)
#Extracting values from row using indexing
ggplot(data = debt , aes(x = debt.bin , y = loan.original.amount)) +
geom_boxplot() +
xlab('Debt to income ratio') + ylab('Loan original amount') +
ggtitle('Loan original amount vs Debt to income ratio')
#I'm using the debt-to-income ratio binwise from previous plots
# Chunk 37
ggplot(data = debt , aes(x = debt.bin , y  = monthly.loan.payment)) +
geom_boxplot() +
facet_wrap(~term) +
ggtitle('Monthly payment vs Debt to income ratio') +
xlab('Term wise monthly loan payment')
# Chunk 39
ggplot(data = subset(normalized.data , !is.na(credit.bins)) ,
aes(x = credit.bins , y = borrower.rate)) +
geom_boxplot() +
ggtitle('Credit bins vs Borrower Rate') +
ggtitle('Average credit Score vs Borrower rate(bin wise)')
rm(normalized.data)
# Chunk 41
credit.lines <- subset(loan ,
open.credit.lines > quantile(loan$open.credit.lines , 0.05 ,
na.rm = TRUE) &
open.credit.lines < quantile (loan$open.credit.lines ,
0.95 , na.rm = TRUE))
#summary(credit.lines$open.credit.lines)
credit.lines$credit.bins <- cut(credit.lines$open.credit.lines ,
seq(2,18,2)) #Binning opening credit line
credit.lines$listing.creation.date <-
as.character(credit.lines$listing.creation.date) #To character DPLYR!
credit.lines.group <- subset(credit.lines,!is.na(prosper.rating...alpha.)) %>%
group_by(credit.bins , prosper.rating...alpha.) %>%
summarise( n  = n() ) %>%
ungroup(credit.bins)
ggplot(data  = credit.lines.group , aes(x = credit.bins , y = n)) +
geom_bar(aes(fill = prosper.rating...alpha.) , stat = 'identity') +
xlab('Credit lines open') + ylab('Frequency') +
ggtitle('Frequency of credit lines open (WRT Alpha rating)') +
scale_fill_brewer(type = 'seq' , palette = 'YlOrRd')
rm(credit.lines.group)
# Chunk 42
ggplot(data = credit.lines , aes(x = credit.bins , y = borrower.rate)) +
geom_boxplot() +
ggtitle('Borrower rate vs Credit lines open') + xlab('Credit lines open')
#I create the current/Open Credit line ratio
credit.lines$credit.line.ratio <-
(credit.lines$current.credit.lines / credit.lines$open.credit.lines)
#Quantiles > 5th and < 95th
credit.lines <- subset(credit.lines ,
credit.line.ratio > quantile(credit.lines$credit.line.ratio ,
0.05 , na.rm = TRUE) &
credit.line.ratio < quantile(credit.lines$credit.line.ratio ,
0.95 , na.rm = TRUE))
#
#summary(credit.lines$credit.line.ratio)
credit.lines$credit.line.ratio.bin <- cut(credit.lines$credit.line.ratio ,
seq(1.059 , 1.50 ,0.05))
ggplot(data = subset(credit.lines,!is.na(credit.line.ratio.bin)) ,
aes(x = credit.line.ratio.bin , y = borrower.rate)) +
geom_boxplot(aes(fill = prosper.rating...alpha.)) +
xlab('Total/Open Credit lines') +
ggtitle('Total/Open credit lines vs borrower rate') +
scale_fill_brewer(type = 'seq')
rm(credit.lines)
#I convert all past due , past due 15 days , past due 45 days and past due > 60
#days to one category Past due -- Because I am only bothered if a person has
#defaulted once/ or not at all (here)
loan$status <- ifelse(startsWith(as.character(loan$loan.status),'Past') ,
'Past Due' , as.character(loan$loan.status))
ggplot(data = subset(loan ,
!is.na(prosper.rating...alpha.) &! prosper.rating...alpha.
%in% c('NC','')) ,
aes(x = status)) + geom_bar(aes(fill = prosper.rating...alpha.)) +
ylab('Frequency') + ggtitle('Distribution of loan status') +
xlab('Loan Status') + guides(fill=guide_legend(title="Alpha rating")) +
scale_fill_brewer(type = 'seq' , palette = 'GnBu')
pi.plot <- subset(loan , !is.na(prosper.rating...alpha.) &! prosper.rating...alpha.
%in% c('NC','')) %>%
group_by(status) %>%
summarise(n = n())
pie(pi.plot$n ,labels =  pi.plot$status , explode = 0.2)
rm(pi.plot)
loan$status <- ifelse(startsWith(as.character(loan$loan.status),'Past') ,
'Past Due' , as.character(loan$loan.status))
ggplot(data = subset(loan ,
!is.na(prosper.rating...alpha.) &! prosper.rating...alpha.
%in% c('NC','')) ,
aes(x = status)) + geom_bar(aes(fill = prosper.rating...alpha.)) +
ylab('Frequency') + ggtitle('Distribution of loan status') +
xlab('Loan Status') + guides(fill=guide_legend(title="Alpha rating")) +
scale_fill_brewer(type = 'seq' , palette = 'GnBu')
#I convert all past due , past due 15 days , past due 45 days and past due > 60
#days to one category Past due -- Because I am only bothered if a person has
#defaulted once/ or not at all (here)
loan$status <- ifelse(startsWith(as.character(loan$loan.status),'Past') ,
'Past Due' , as.character(loan$loan.status))
ggplot(data = subset(loan ,
!is.na(prosper.rating...alpha.) &! prosper.rating...alpha.
%in% c('NC','')) ,
aes(x = status)) + geom_bar(aes(fill = prosper.rating...alpha.)) +
ylab('Frequency') + ggtitle('Distribution of loan status') +
xlab('Loan Status') + guides(fill=guide_legend(title="Alpha rating")) +
scale_fill_brewer(type = 'seq' , palette = 'PuRd')
